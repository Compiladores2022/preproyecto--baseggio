Program {

	Int aux = 10;
	Int x = 3 * 10 * 5;

	Int f(Int x) {
		return x;
	}
	
	void print(Int x) extern;
	
	void assertEquals(Int expected, Int value) extern;
	
	void assertTrue(Bool expression) extern;
	
	void assertFalse(Bool expression) extern;
	
	Int main() {
		Int x1 = f(10) + 5;
		Int x2 = 5 + f(10);
		Int x3 = 5 - f(10);
		Int x4 = f(10) - 5;
		Int x5 = f(10) * 5;
		Int x6 = 5 * f(10);
		Int x7 = 5 / f(10);
		Int x8 = f(10) / 5;
		Int x9 = 5 % f(10);
		Int x0 = f(10) % 5;
		Int t1 = -f(10); // -10
		Int t2 = -(f(10) + x1); // -25
		assertEquals(10, f(10));
		assertEquals(15, x1);
		assertEquals(15, x2);
		assertEquals(-5, x3);
		assertEquals(5, x4);
		assertEquals(50, x5);
		assertEquals(50, x6);
		assertEquals(0, x7);
		assertEquals(2, x8);
		assertEquals(5, x9);
		assertEquals(0, x0);
		assertEquals(-10, t1);
		assertEquals(-25, t2);
		assertEquals(10, 5 + 5);
		assertEquals(10, f(5) + f(5));
		assertEquals(55, f(0) + f(1) + f(2) + f(3) + f(4) + f(5) + f(6) + f(7) + f(8) + f(9) + f(10));
		assertEquals(150, x);
		assertEquals(15, 5 + 5 * 2);
		assertEquals(-5, 5 - 5 * 2);
		assertEquals(5, 2 * 5 - 5);
		assertTrue(True && True || False);
		assertTrue(True == False || True);
		assertTrue(!False && True);
		return 0;
	}
}
