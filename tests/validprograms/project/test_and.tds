Program {
	void print(Bool b) extern;
	
	void assertTrue(Bool expression) extern;
	
	void assertFalse(Bool expression) extern;
	
	void testAnd_1() {
		Bool b = True && True;
		assertTrue(b);
	}
	
	void testAnd_2() {
		Bool b = True && False;
		assertFalse(b);
	}
	
	void testAnd_3() {
		Bool b = False && True;
		assertFalse(b);
	}
	
	void testAnd_4() {
		Bool b = False && False;
		assertFalse(b);
	}
	
	void testAnd_5() {
		Bool b = True && True && True && False;
		assertFalse(b);
	}
	
	void testAnd_6() {
		Bool b = False && False && False && True;
		assertFalse(b);
	}
	
	void testAnd_7() {
		Bool b = False && False && False && False;
		assertFalse(b);
	}

	void main() {
		testAnd_1();
		testAnd_2();
		testAnd_3();
		testAnd_4();
		testAnd_5();
		testAnd_6();
		testAnd_7();
	}
}

/*

gcc -o test test_addition.s lib.c && ./test 
gcc -o test test_and.s lib.c && ./test 
gcc -o test test_block.s lib.c && ./test 
gcc -o test test_division.s lib.c && ./test 
gcc -o test test_eq.s lib.c && ./test 
gcc -o test test_function_call.s lib.c && ./test 
gcc -o test test_globl_var_1.s lib.c && ./test 
gcc -o test test_globl_var.s lib.c && ./test 
gcc -o test test_gt.s lib.c &&  ./test 
gcc -o test test_IF_ELSE.s lib.c && ./test 
gcc -o test test_IF.s lib.c && ./test 
gcc -o test test_lt.s lib.c && ./test 
gcc -o test test_minus.s lib.c && ./test 
gcc -o test test_mod.s lib.c && ./test 
gcc -o test test_multiplication.s lib.c && ./test 
gcc -o test test_neg.s lib.c && ./test 
gcc -o test test_offset.s lib.c && ./test 
gcc -o test test_or.s lib.c && ./test 
gcc -o test test_substraction.s lib.c && ./test 

*/
